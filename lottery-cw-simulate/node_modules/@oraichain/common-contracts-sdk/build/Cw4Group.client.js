"use strict";
/**
* This file was automatically generated by @oraichain/ts-codegen@0.35.8.
* DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
* and run the @oraichain/ts-codegen generate command to regenerate this file.
*/
Object.defineProperty(exports, "__esModule", { value: true });
exports.Cw4GroupClient = exports.Cw4GroupQueryClient = void 0;
class Cw4GroupQueryClient {
    constructor(client, contractAddress) {
        this.admin = async () => {
            return this.client.queryContractSmart(this.contractAddress, {
                admin: {}
            });
        };
        this.totalWeight = async ({ atHeight }) => {
            return this.client.queryContractSmart(this.contractAddress, {
                total_weight: {
                    at_height: atHeight
                }
            });
        };
        this.listMembers = async ({ limit, startAfter }) => {
            return this.client.queryContractSmart(this.contractAddress, {
                list_members: {
                    limit,
                    start_after: startAfter
                }
            });
        };
        this.member = async ({ addr, atHeight }) => {
            return this.client.queryContractSmart(this.contractAddress, {
                member: {
                    addr,
                    at_height: atHeight
                }
            });
        };
        this.hooks = async () => {
            return this.client.queryContractSmart(this.contractAddress, {
                hooks: {}
            });
        };
        this.client = client;
        this.contractAddress = contractAddress;
        this.admin = this.admin.bind(this);
        this.totalWeight = this.totalWeight.bind(this);
        this.listMembers = this.listMembers.bind(this);
        this.member = this.member.bind(this);
        this.hooks = this.hooks.bind(this);
    }
}
exports.Cw4GroupQueryClient = Cw4GroupQueryClient;
class Cw4GroupClient extends Cw4GroupQueryClient {
    constructor(client, sender, contractAddress) {
        super(client, contractAddress);
        this.updateAdmin = async ({ admin }, _fee = "auto", _memo, _funds) => {
            return await this.client.execute(this.sender, this.contractAddress, {
                update_admin: {
                    admin
                }
            }, _fee, _memo, _funds);
        };
        this.updateMembers = async ({ add, remove }, _fee = "auto", _memo, _funds) => {
            return await this.client.execute(this.sender, this.contractAddress, {
                update_members: {
                    add,
                    remove
                }
            }, _fee, _memo, _funds);
        };
        this.addHook = async ({ addr }, _fee = "auto", _memo, _funds) => {
            return await this.client.execute(this.sender, this.contractAddress, {
                add_hook: {
                    addr
                }
            }, _fee, _memo, _funds);
        };
        this.removeHook = async ({ addr }, _fee = "auto", _memo, _funds) => {
            return await this.client.execute(this.sender, this.contractAddress, {
                remove_hook: {
                    addr
                }
            }, _fee, _memo, _funds);
        };
        this.client = client;
        this.sender = sender;
        this.contractAddress = contractAddress;
        this.updateAdmin = this.updateAdmin.bind(this);
        this.updateMembers = this.updateMembers.bind(this);
        this.addHook = this.addHook.bind(this);
        this.removeHook = this.removeHook.bind(this);
    }
}
exports.Cw4GroupClient = Cw4GroupClient;
//# sourceMappingURL=Cw4Group.client.js.map